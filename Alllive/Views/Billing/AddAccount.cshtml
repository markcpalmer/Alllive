@model Alllive.Models.PaymentMethodViewModel
@{
    ViewBag.Title = "AddAccount";
}

<link rel="stylesheet" href="~/Content/global.css" />
<script src="https://js.stripe.com/v3/"></script>


<h2>Add Account</h2>
<form id="payment-form" data-secret='@ViewData=["ClientSecret"]'>
    <label>Billing Address</label>
    <div>
        @*<input class="form-control" type="text" name="line1" id="line1" placeholder="Street Address" />*@
        @*<input type="text" class="form-control" name="username" placeholder="Username" required="required">*@
        @Html.TextBoxFor(a => a.AddressLine1, new { @class = "form-control", name = "addresLine1", placeholder = "Address Line 1", required = "required" })
    </div>
    <div>
        @*<input class="form-control" type="text" name="line2" id="line2" placeholder="Address line 2" /*@
        @Html.TextBoxFor(a => a.AddressLine2, new { @class = "form-control", name = "addresLine2", placeholder = "Address Line 2" })
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.TextBoxFor(a => a.City, new { @class = "form-control", name = "city", placeholder = "City", required = "required" })
            <!--<input class="form-control" type="text" name="city" id="city" placeholder="City" />-->
        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(a => a.State,
                    new SelectList(Enum.GetValues(typeof(Utilities.States))),
                    "Select State",
                    new { @class = "form-control", required = "required" })
        </div>
        <div class="col-md-4">
            <!--<input class="form-control" type="text" name="postal_code" id="postal_code" placeholder="Zip Code" />-->
            @Html.TextBoxFor(a => a.PostalCode, new { @class = "form-control", name = "postal code", placeholder = "Postal Code", required = "required" })
        </div>
    </div>
    <label>Card Information</label>
    <div>
        @Html.TextBoxFor(a => a.NameOnCard, new { @class = "form-control", name = "Name on Card", placeholder = "Name on Card", required = "required" })
    </div>
    <div>
        @Html.TextBoxFor(a => a.CardNumber, new { @class = "form-control", name = "Card Number", placeholder = "Card Number", required = "required" })
    </div>
    <div>
        @Html.TextBoxFor(a => a.CvcCode, new { @class = "form-control", name = "cvv", placeholder = "cvv", required = "required" })
    </div>
    <div>
        @Html.TextBoxFor(a => a.ExpMonth, new { @class = "form-control", name = "exp month", placeholder = "Expiration Month", required = "required" })
        @Html.TextBoxFor(a => a.ExpYear, new { @class = "form-control", name = "exp year", placeholder = "Expiration Year", required = "required" })
    </div>


    <button id="submit" class="btn btn-primary">
        <div class="spinner hidden" id="spinner"></div>
        <span id="button-text">Save Account</span>
    </button>
    <p id="card-error" role="alert"></p>
    <p class="result-message hidden">
        Account added succesfully, see the result in your
        <a href="" target="_blank">Stripe dashboard.</a> Refresh the page to pay again.
    </p>
</form>
@section scripts {
    <script>
        // A reference to Stripe.js initialized with your real test publishable API key.
        var stripe = Stripe("pk_test_51H4bEIAVJDEhYcbPU91ptYjI6hYmZX34HPXrmLZRKxebFiFpPFaNILR0QFMQ5h4B6J8AmU7Zl0HxBAXiEMVjeiIu00xru9Wq5O");

        // The items the customer wants to buy
        var purchase = {
            items: [{
                line1: $("#line1").val(),
                line2: $("#line2").val(),
                city: $("#city").val(),
                state: $("#state").val(),
                postal_code: $("#postal_code").val(),
                name_on_card: $("#name_on_card").val(),
                cc:$("input[name=cardnumber]").value,
                exp:$("input[name=exp-date]").value,
                cvc:$("input[name=cvc]").value,
                postal: $("input[name=postal]").value,
                card: card 

            }]
        };

        // Disable the button until we have Stripe set up on the page
        //document.querySelector("button").disabled = true;

        fetch("/create-payment-intent", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(purchase)
        })
            .then(function (result) {
                return result.json();
            })
            .then(function (data) { })
        var elements = stripe.elements();

        var style = {
            base: {
                color: "#32325d",
                fontFamily: 'Arial, sans-serif',
                fontSmoothing: "antialiased",
                fontSize: "16px",
                "::placeholder": {
                    color: "#32325d"
                }
            },
            invalid: {
                fontFamily: 'Arial, sans-serif',
                color: "#fa755a",
                iconColor: "#fa755a"
            }
        };

        var card = elements.create("card", { style: style });
        // Stripe injects an iframe into the DOM
        card.mount("#card-element");

        card.on("change", function (event) {
            // Disable the Pay button if there are no card details in the Element
            document.querySelector("button").disabled = event.empty;
            document.querySelector("#card-error").textContent = event.error ? event.error.message : "";
        });

        /*
        var form = document.getElementById("payment-form");
        form.addEventListener("submit", function (event) {
            event.preventDefault();
            // Complete payment when the submit button is clicked
//           console.log(purchase);

            payWithCard(stripe, card/*, data.clientSecret);
        });
        */
        //});

        // Calls stripe.confirmCardPayment
        // If the card requires authentication Stripe shows a pop-up modal to
        // prompt the user to enter authentication details without leaving your page.
        var payWithCard = function (stripe, card, clientSecret) {
            loading(true);
            console.log("hello");
            stripe
              .createPaymentMethod({
                type: 'card',
                card: card,
                billing_details: {
                  name: $("#name_on_card").val()
                },
              })
              .then(function(result) {
                // Handle result.error or result.paymentMethod
                  loading(false);
                  console.log(result);
              });
            //stripe
            //    .createPaymentMethod(clientSecret, {
            //        type:"card",
            //        card: card,
            //        billing_details: {
            //            name: $("#name_on_card").val(),
            //            address: {
            //                line1: $("#line1").val(),
            //                line2: $("#line2").val(),
            //                city: $("#city").val(),
            //                state: $("#state").val(),
            //                postal_code:$("#postal_code").val()
            //            }
            //        }

            //    })
            //    .then(function (result) {
            //        if (result.error) {
            //            // Show error to your customer
            //            showError(result.error.message);
            //        } else {
            //            // The payment succeeded!
            //            orderComplete(result.id);
            //        }
            //    });
            //orderComplete(card);
        };

        /* ------- UI helpers ------- */

        // Shows a success message when the payment is complete
        var orderComplete = function (card)
        {
            @*console.log(orderComplete);
            console.log(card);
            var cardInfo = {
                NameOnCard: $("#name_on_card").val(),

                AddressLine1: $("#line1").val(),
                AddressLine2: $("#line2").val(),
                City: $("#city").val(),
                State: $("#state").val(),
                PostalCode: $("#postal_code").val()
                
            };
            //CardNumber: card.card_number,
            //    ExpMonth: card.exp_month,
            //    ExpYear: card.exp_year,
            //    CvcCode: card.id
            loading(false);
            console.log(cardInfo);
            $.ajax({
                url: '@Url.Action("CreatePaymentMethod","Billing")',
                type: "POST",
                data: cardInfo,
                success: function (result) {
                    document.querySelector(".result-message").classList.remove("hidden");
                    document.location.href = '@Url.Action("ViewProfile","User")';
                }
            });*@

        };

        // Show the customer the error from Stripe if their card fails to charge
        var showError = function (errorMsgText) {
            loading(false);
            var errorMsg = document.querySelector("#card-error");
            errorMsg.textContent = errorMsgText;
            setTimeout(function () {
                errorMsg.textContent = "";
            }, 4000);
        };

        // Show a spinner on payment submission
        var loading = function (isLoading) {
            if (isLoading) {
                // Disable the button and show a spinner
                document.querySelector("button").disabled = true;
                document.querySelector("#spinner").classList.remove("hidden");
                document.querySelector("#button-text").classList.add("hidden");
            } else {
                document.querySelector("button").disabled = false;
                document.querySelector("#spinner").classList.add("hidden");
                document.querySelector("#button-text").classList.remove("hidden");
            }
        };

    </script>
}