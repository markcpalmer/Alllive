@model  Alllive.Models.ScheduleModel
@{
    ViewBag.Title = "ScheduleMeeting";
}

<h2>Schedule Meeting</h2>
@using (Html.BeginForm("ScheduleMeeting", "Navigation", FormMethod.Post))  // how does it know this is the usercontroller since it says user? Is it because of the @model statment at the top?
{
<div class="container">
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("Session Name")
        </div>
        <div class="col-sm-2">
            @Html.TextBoxFor(a => a.SessionName, new { @class = "form-control", @style = "display:inline-block" })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("Description")
        </div>
        <div class="col-sm-2">
            @Html.TextArea("Description")
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("Date")
        </div>
        <div class="col-sm-2">
            <input type="date" />
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("Start Time")
        </div>
        <div class="col-sm-2">
            @*@Html.TextBoxFor(a => a.DateTimeScheduledIn, new { @class = "form-control", @style = "display:inline-block" })*@
            <input type="time" id="myTime">
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("End Time")
        </div>
        <div class="col-sm-2">
            @*@Html.TextBoxFor(a => a.DateTimeScheduledOut, new { @class = "form-control", @style = "display:inline-block" })*@
            <input type="time" id="myTime">

        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("Time Zone")
        </div>
        <div class="col-sm-2">
            <select name="timezone_offset" id="timezone-offset" class="span5">
                <option value="-12:00">(GMT -12:00) Eniwetok, Kwajalein</option>
                <option value="-11:00">(GMT -11:00) Midway Island, Samoa</option>
                <option value="-10:00">(GMT -10:00) Hawaii</option>
                <option value="-09:50">(GMT -9:30) Taiohae</option>
                <option value="-09:00">(GMT -9:00) Alaska</option>
                <option value="-08:00">(GMT -8:00) Pacific Time (US &amp; Canada)</option>
                <option value="-07:00">(GMT -7:00) Mountain Time (US &amp; Canada)</option>
                <option value="-06:00">(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>
                <option value="-05:00" selected="selected">(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>
                <option value="-04:50">(GMT -4:30) Caracas</option>
                <option value="-04:00">(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz</option>
                <option value="-03:50">(GMT -3:30) Newfoundland</option>
                <option value="-03:00">(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>
                <option value="-02:00">(GMT -2:00) Mid-Atlantic</option>
                <option value="-01:00">(GMT -1:00) Azores, Cape Verde Islands</option>
                <option value="+00:00">(GMT) Western Europe Time, London, Lisbon, Casablanca</option>
                <option value="+01:00">(GMT +1:00) Brussels, Copenhagen, Madrid, Paris</option>
                <option value="+02:00">(GMT +2:00) Kaliningrad, South Africa</option>
                <option value="+03:00">(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>
                <option value="+03:50">(GMT +3:30) Tehran</option>
                <option value="+04:00">(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi</option>
                <option value="+04:50">(GMT +4:30) Kabul</option>
                <option value="+05:00">(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>
                <option value="+05:50">(GMT +5:30) Bombay, Calcutta, Madras, New Delhi</option>
                <option value="+05:75">(GMT +5:45) Kathmandu, Pokhara</option>
                <option value="+06:00">(GMT +6:00) Almaty, Dhaka, Colombo</option>
                <option value="+06:50">(GMT +6:30) Yangon, Mandalay</option>
                <option value="+07:00">(GMT +7:00) Bangkok, Hanoi, Jakarta</option>
                <option value="+08:00">(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>
                <option value="+08:75">(GMT +8:45) Eucla</option>
                <option value="+09:00">(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>
                <option value="+09:50">(GMT +9:30) Adelaide, Darwin</option>
                <option value="+10:00">(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>
                <option value="+10:50">(GMT +10:30) Lord Howe Island</option>
                <option value="+11:00">(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>
                <option value="+11:50">(GMT +11:30) Norfolk Island</option>
                <option value="+12:00">(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>
                <option value="+12:75">(GMT +12:45) Chatham Islands</option>
                <option value="+13:00">(GMT +13:00) Apia, Nukualofa</option>
                <option value="+14:00">(GMT +14:00) Line Islands, Tokelau</option>
            </select>

        </div>
    </div>
    @*<div>
        @html.dropdownlistfor(a => a.timezone, timezoneinfo.getsystemtimezones().select(b => New selectlistitem{ text = b.displayname,value = b.id}))
    </div>*@
    <div class="row">
        <div class="col-sm-2">
            @Html.Label("Recurr")
        </div>
        <div class="col-sm-2">
            @Html.CheckBox("Recurr", false)

        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">

        </div>
        <div class="col-sm-2">
            <select id="myList">
                <option value="1">Daily</option>
                <option value="2">Weekly</option>
                <option value="3">Monthly</option>
            </select>

        </div>
    </div>



</div>
    <p>
        @Html.ValidationMessageFor(a => a.SessionName, "", new { @style = "color:'red'" })<br />
        @Html.ValidationMessageFor(a => a.DateTimeScheduledIn, "", new { @style = "color:red" })<br />
        @Html.ValidationMessageFor(a => a.DateTimeScheduledOut, "", new { @style = "color:red" })<br />
        @Html.ValidationSummary()
    </p>

    <br />

    <input type="submit" value="Submit" />

    }

